---
# yamllint disable rule:line-length
# yamllint disable rule:truthy

name: Build Feature Branch

on:
  push:
    branches:
      - "*"
      - "!master"

jobs:

  build:
    name: Build feature branch
    runs-on: ubuntu-latest

    permissions:
      pages: write      # to deploy to Pages
      id-token: write   # to verify the deployment originates from an appropriate source

    outputs:
      job_status: ${{ job.status }}

    env:
      HUGO_VERSION: 0.140.1

    continue-on-error: false

    steps:

      - name: Check out code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Pages
        id: setup_pages
        uses: actions/configure-pages@v5

      - name: Define environment variables
        id: define_environment_variables
        shell: bash
        run: |
          _branch=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}
          _workdir=${{ runner.temp }}/hugo
          echo "branch=${_branch}" >> $GITHUB_OUTPUT
          echo "workdir=${_workdir}" >> $GITHUB_OUTPUT
          echo "publish_dir=${_workdir}/${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}/public" >> $GITHUB_OUTPUT
          echo "base_url=${{ steps.setup_pages.outputs.base_url }}/${_branch}/public/" >> $GITHUB_OUTPUT

      - name: Make sure the publish directory exists
        id: make_sure_publish_dir_exists
        shell: bash
        run: |
          mkdir -pv ${{ steps.define_environment_variables.outputs.workdir }}
          mkdir -pv ${{ steps.define_environment_variables.outputs.publish_dir }}

      - name: Install Hugo CLI
        id: install_hugo_cli
        shell: bash
        run: >-
          set -e

          wget
          -O "${{ runner.temp }}/hugo.deb"
          "https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION}/hugo_extended_${HUGO_VERSION}_linux-amd64.deb"
 
          sudo dpkg -i ${{ runner.temp }}/hugo.deb

      - name: Build with Hugo
        id: build
        shell: bash
        working-directory: ./src
        env:
          HUGO_CACHEDIR: ${{ runner.temp }}/hugo_cache
          HUGO_ENVIRONMENT: cicd
          HUGO_PUBLISHDIR: ${{ steps.define_environment_variables.outputs.publish_dir }}
          TZ: Europe/Stockholm
        run: >-
          hugo
          --gc
          --minify
          --baseURL "${{ steps.define_environment_variables.outputs.base_url }}"

      - name: Upload Pages artifact
        id: upload_pages_artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ${{ steps.define_environment_variables.outputs.workdir }}

      - name: Deploy to GitHub Pages
        id: deploy_pages
        uses: actions/deploy-pages@v4

      - name: Print out the results
        id: output_results
        shell: bash
        run: |
          echo "Pages URL: ${{ steps.deploy_pages.outputs.page_url }}"
          echo "Base URL: ${{ steps.define_environment_variables.outputs.base_url }}"

...
